What is the .Net framework? | It is a platform for building various applications on windows. It has a list of inbuilt functionalities in the form of class, library, and APIs which are used to build, deploy and run web services and different applications. It supports different languages such as C#, VB .Net, Cobol, Perl, etc. This framework supports the object-oriented programming model.  | 35 | 1
What are the important components of .Net? | The components of .Net are Common language run-time, .Net Class library, Application domain, Common Type System, .Net framework, Profiling, etc. However, the two important components are the Class library and the Common Language Runtime. CLR provides building blocks for a wide variety of applications. The class library consists of a set of classes that are used to access common functionality. The functionality can be shared among different applications.  | 35 | 1
What is CTS? | CTS stands for Common Type System. It has a set of rules which state  | 35 | 1
What is CLR? | CLR stands for Common Language Runtime. It is one of the most important components of the .Net framework. It provides building blocks for many applications. An application built using C# gets compiled by its own compiler and is converted into an Intermediate language. This is then targeted to CLR. CLR does various operations like memory management, security checks, assemblies to be loaded and thread management. It provides a secure execution environment for applications.  | 35 | 1
What is CLS? | CLS stands for Common Language Specification. With the rules mentioned under CLS, the developer | 35 | 1
What is JIT? | JIT stands for Just In Time. JIT is a compiler that converts Intermediate Language to a Native code. The code is converted into Native language during execution. Native code is nothing but hardware specifications that can be read by the CPU. The native code can be stored so that it is accessible for subsequent calls.  | 35 | 1
What is MSIL? | MSIL stands for Microsoft Intermediate Language. MSIL provides instructions for calling methods, initializing and storing values, operations such as memory handling, exception handling and so on. All .Net codes are first compiled to IL.  | 35 | 1
What is meant by Managed and Unmanaged code? | The code that is managed by the CLR is called Managed code. This code runs inside the CLR. Hence, it is necessary to install the .Net framework in order to execute the managed code. CLR manages the memory through g | 35 | 1
How is a Managed code executed? | Follow these steps while executing a Managed code: Choosing a language compiler depending on the language in which the code is written. Converting the above code into Intermediate language by its own compiler. The IL is then targeted to CLR which converts the code into native code with the help of JIT. Execution of Native code.  | 35 | 1
What is ASP.Net? | ASP .Net is a part of .Net technology and it comprises of CLR too. It is an open-source server-side technology that enables the programmers to build power | 35 | 1
Explain State management in ASP .Net. | State Management means maintaining the state of the object. The object here refers to a web page/control. There are two types of State management, Client Side, and Server side. Client-Side – Storing the information in the Page or Client’s System. They are reusable, simple objects. Server Side – Storing the information on the Server. It is easier to maintain the information on the Server rather than depending on the client for preserving the state.  | 35 | 1
What is an Assembly? What are the different types of Assemblies? | An Assembly is a collection of logical units. Logical units refer to the types and resources which are required to build an application and deploy them using the .Net framework. The CLR uses this information for type implementations. Basically, Assembly is a collection of Exe and DLLs. It is portable and executable. There are two types of A | 35 | 1
Explain the different parts of an Assembly. | The different parts of an Assembly includes: Manifest – It contains the information about the version of an assembly. It is also called as assembly metadata. Type Metadata – Binary information of the program. MSIL – Microsoft Intermediate Language code. Resources – List of related files.  | 35 | 1
What is an EXE and a DLL? | Exe and DLLs are Assembly executable modules. Exe is an executable file. This runs the application for which it is designed. An Exe is generated when we build an application. Hence, the assemblies are loaded directly when we run an Exe. However, an Exe cannot be shared with the other applications. DLL stands for Dynamic Link Library. It is a library t | 35 | 1
What is Caching? | Caching means storing data temporarily in the memory so that the application can access the data from the cache instead of looking for its original location. This increases the performance of the application and its speed. System.Runtime.Caching namespace is used for Caching information in .Net. Given below are the 3 different types of Caching: Page Caching Data Caching Fragment Caching  | 35 | 1
What is MVC? | MVC stands for Model View Controller. It is an architectural model for building the .Net applications. Models – Model objects store and retrieve data from the database for an application. They are usually the logical parts of an appli | 35 | 1
What is the difference between Function and Stored procedure? | Stored Procedure: A Stored Procedure is always used to perform a specific task. It can return zero, one or more value. It can have both input and output parameters. Exception handling can be done using a try-catch block. A function can be called from a Procedure. Functions: Functions must return a single value. It can only have the input parameter. Exception handling cannot be done using a try-catch block. A Stored procedure cannot be called from a function.  | 35 | 1
What is GAC? | GAC stands for Global Assembly Cache. Whenever CLR gets installed on the machine, GAC comes as a part of it. GAC specifically stores those assemblies which will be shared by many applications. A Developer tool called Gacutil.exe is used to add any file to GAC.  | 35 | 1
What is meant by Globalization and Localization? | Internationalization is the process of designing applications that support multiple languages. This is divided into Localization and Globalization. Globalization is nothing but developing applications to suppor | 35 | 1
What is a Garbage Collector? | Garbage collection is a .Net feature to free the unused code objects in the memory. The memory heap is divided into three generations. Generation 0, Generation 1 and Generation 2. Generation 0 – This is used to store short-lived objects. Garbage Collection happens frequently in this Generation. Generation 1 – This is for medium-lived objects. Usually, the objects that get moved from generation 0 are stored in this. Generation 2 – This is for long-lived objects. Collecting a Generation refers to collecting the objects in that generation and all its younger generati | 35 | 1